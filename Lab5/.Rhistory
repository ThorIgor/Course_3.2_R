MASS::stepAIC(modZero, direction = "forward",
scope = list(lower = modZero, upper = modAll), k = log(n))
# Ця функція обчислює спрощену anova для лінійної моделі
simpleAnova <- function(object, ...) {
# Обчислити таблицю anova
tab <- anova(object, ...)
# Отримати кількість предикторів
p <- nrow(tab) - 1
# Додайте рядок предикторів
predictorsRow <- colSums(tab[1:p, 1:2])
predictorsRow <- c(predictorsRow, predictorsRow[2] / predictorsRow[1])
# F-значення
Fval <- predictorsRow[3] / tab[p + 1, 3]
pval <- pf(Fval, df1 = p, df2 = tab$Df[p + 1], lower.tail = FALSE)
predictorsRow <- c(predictorsRow, Fval, pval)
# Спрощена таблиця
tab <- rbind(predictorsRow, tab[p + 1, ])
row.names(tab)[1] <- "Predictors"
return(tab)
}
DF <- read.csv("universities.csv")
Y <- DF$teaching.score
X1 <- DF$research.score
X2 <- DF$citations.score
X3 <- DF$industry.income.score
X4 <- DF$intl.outlook.score
X5 <- DF$gender.ratio
mod <- lm(Y ~ X1+X2+X3+X4+X5)
simpleAnova(mod)
anova(mod)
n <- nrow(DF)
DF$title <- NULL
DF$location <- NULL
modAll <- lm(formula = DF$teaching.score ~ ., data = DF)
modZero <- lm(formula = DF$teching.score ~ 1, data = DF)
modZero <- lm(formula = DF$teaching.score ~ 1, data = DF)
MASS::stepAIC(modAll, direction = "backward", k = log(n))
MASS::stepAIC(modZero, direction = "forward",
scope = list(lower = modZero, upper = modAll), k = log(n))
MASS::stepAIC(modAll, direction = "both", trace = 0, scope = list(lower = modZero,
upper = modAll), k = log(n))
MASS::stepAIC(modAll, trace = 0, k = 2)
MASS::stepAIC(*, trace = 0, k = log(n))
MASS::stepAIC(modAll, trace = 0, k = log(n))
# Ця функція обчислює спрощену anova для лінійної моделі
simpleAnova <- function(object, ...) {
# Обчислити таблицю anova
tab <- anova(object, ...)
# Отримати кількість предикторів
p <- nrow(tab) - 1
# Додайте рядок предикторів
predictorsRow <- colSums(tab[1:p, 1:2])
predictorsRow <- c(predictorsRow, predictorsRow[2] / predictorsRow[1])
# F-значення
Fval <- predictorsRow[3] / tab[p + 1, 3]
pval <- pf(Fval, df1 = p, df2 = tab$Df[p + 1], lower.tail = FALSE)
predictorsRow <- c(predictorsRow, Fval, pval)
# Спрощена таблиця
tab <- rbind(predictorsRow, tab[p + 1, ])
row.names(tab)[1] <- "Predictors"
return(tab)
}
DF <- read.csv("universities.csv")
Y <- DF$teaching.score
X1 <- DF$research.score
X2 <- DF$citations.score
X3 <- DF$industry.income.score
X4 <- DF$intl.outlook.score
X5 <- DF$gender.ratio
mod <- lm(Y ~ X1+X2+X3+X4+X5)
simpleAnova(mod)
anova(mod)
n <- nrow(DF)
DF$title <- NULL
DF$location <- NULL
modAll <- lm(formula = DF$teaching.score ~ ., data = DF)
modZero <- lm(formula = DF$teaching.score ~ 1, data = DF)
MASS::stepAIC(modAll, direction = "backward", k = log(n))
MASS::stepAIC(modZero, direction = "forward",
scope = list(lower = modZero, upper = modAll), k = log(n))
MASS::stepAIC(modAll, direction = "both", trace = 0,
scope = list(lower = modZero, upper = modAll), k = log(n))
MASS::stepAIC(modAll, trace = 0, k = 2)
MASS::stepAIC(modAll, trace = 0, k = log(n))
# Coefficients:
# Coefficients:
#   (Intercept)                ranking          overall.score         research.score        citations.score
# Coefficients:
#   (Intercept)                ranking          overall.score         research.score        citations.score
# 3.853276               0.004516               1.216689               0.136092              -0.300980
# Coefficients:
#   (Intercept)                ranking          overall.score         research.score        citations.score
# 3.853276               0.004516               1.216689               0.136092              -0.300980
# industry.income.score     intl.outlook.score   students.staff.ratio     perc.intl.students
