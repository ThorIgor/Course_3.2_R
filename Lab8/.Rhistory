XTX_inv<-solve(t(X)%*%Sigma_inv%*%X)
beta<-XTX_inv%*%t(X)%*%Sigma_inv%*%y
beta
mod2 <- gls(y ~ x)
mod2
plot(x, y)
abline(mod2, col="green")
data <- read.csv("universities_cor.csv")
y <- data$overall.score
x <- data$teaching.score
lmod <- lm(y ~ x)
n <- length(residuals(lmod))
cor <- cor(residuals(lmod)[-1],residuals(lmod)[-n])
X <- model.matrix(lmod)
Sigma<-diag(n)
Sigma<-cor^abs(row(Sigma)-col(Sigma))
data <- read.csv("universities_cor.csv")
lmod <- lm(overall.score ~ teaching.score, data=data)
n <- length(residuals(lmod))
cor <- cor(residuals(lmod)[-1],residuals(lmod)[-n])
X <- model.matrix(lmod)
Sigma<-diag(n)
Sigma<-cor^abs(row(Sigma)-col(Sigma))
Sigma_inv<-solve(Sigma)
XTX_inv<-solve(t(X)%*%Sigma_inv%*%X)
beta<-XTX_inv%*%t(X)%*%Sigma_inv%*%data$overall.score
beta
mod <- gls(overall.score ~ teaching.score, data=data)
mod
mod <- gls(teaching.score ~ overall.score, data=data)
mod
overall.score
overall.score
mod <- gls(overall.score ~ teaching.score, data=data)
mod
data <- read.csv("universities_cor.csv")
lmod <- lm(overall.score ~ teaching.score, data=data)
n <- length(residuals(lmod))
cor <- cor(residuals(lmod)[-1],residuals(lmod)[-n])
X <- model.matrix(lmod)
Sigma<-diag(n)
Sigma<-cor^abs(row(Sigma)-col(Sigma))
Sigma_inv<-solve(Sigma)
XTX_inv<-solve(t(X)%*%Sigma_inv%*%X)
beta<-XTX_inv%*%t(X)%*%Sigma_inv%*%data$overall.score
beta
mod <- GLS(data$overall.score, data$teaching.score, R = Sigma)
mod
install.packages("GLS")
mod <- GLS(data$overall.score, data$teaching.score, R = Sigma)
mod
install.packages("evolvability")
mod <- GLS(data$overall.score, data$teaching.score, R = Sigma)
mod <- GLS(data$overall.score, data$teaching.score, R = Sigma)
mod <- GLS(data$overall.score, data$teaching.score, R = Sigma)
Sigma
Sigma_inv
num <- 1000
set.seed(109)
x1 <- rpois(num, 12)
x2 <- rgamma(num, 2)
cond_var <- rpois(num, 99)
error_term <- sapply(cond_var, function(i) rnorm(1, 0, sqrt(i)))
y <- 2*x1 + 3*x2 + error_term # equation
dat <- cbind(y, x1, x2, error_term, cond_var)
dat <- as.data.frame(dat[sample(1:num,500,replace = TRUE),])
num <- 1000
set.seed(109)
x1 <- rpois(num, 12)
x2 <- rgamma(num, 2)
cond_var <- rpois(num, 99)
error_term <- sapply(cond_var, function(i) rnorm(1, 0, sqrt(i)))
y <- 2*x1 + 3*x2 + error_term # equation
dat <- cbind(y, x1, x2, error_term, cond_var)
dat <- as.data.frame(dat[sample(1:num,500,replace = TRUE),])
num <- 1000
set.seed(109)
x1 <- rpois(num, 12)
x2 <- rgamma(num, 2)
cond_var <- rpois(num, 99)
error_term <- sapply(cond_var, function(i) rnorm(1, 0, sqrt(i)))
y <- 2*x1 + 3*x2 + error_term # equation
dat <- cbind(y, x1, x2, error_term, cond_var)
dat <- as.data.frame(dat[sample(1:num,500,replace = TRUE),])
plot(dat$x1, dat$y)
plot(dat$x2, dat$y)
mod <- lm(y~x1, data=dat)
plot(dat$x1, dat$y)
avline(mod)
abline(mod)
plot(dat$x2, dat$y)
mod <- lm(y~x2, data=dat)
abline(mod)
data <- read.csv("universities_cor.csv")
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% longley$Empl
data <- read.csv("universities_cor.csv")
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals)
cor <- cor(mod1$res[-1],mod1$res[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- corˆabs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals)
c <- cor(mod1$res[-1],mod1$res[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- cˆabs(row(Sigma)-col(Sigma))
cor(mod1$res[-1],mod1$res[-n])
cor(mod1$res[1],mod1$res[-n])
cor(residuals(mod1)[1], residuals(mod1)[-n])
cor(residuals(mod1)[-1], residuals(mod1)[-n])
mod1 <- lm(overall.score ~ teaching.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals)
cor(residuals(mod1)[-1], residuals(mod1)[-n])
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
cor(residuals(mod1)[-1], residuals(mod1)[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- cˆabs(row(Sigma)-col(Sigma))
Sigma <- 0.5301196ˆabs(row(Sigma)-col(Sigma))
Sigma <- 0.5301196^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
res <- data$overall.score - x %*% beta
res
g <- gls(overall.score ~ teaching.score+research.scoren, correlation=corAR1(form= ~Year), data=data)
library(nlme)
g <- gls(overall.score ~ teaching.score+research.scoren, correlation=corAR1(form= ~Year), data=data)
g <- gls(overall.score ~ teaching.score+research.scoren, correlation=corAR1(form= ~ranking), data=data)
g <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~ranking), data=data)
g
plot(g)
mod1 <- lm(overall.score ~ teaching.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
cor(residuals(mod1)[-1], residuals(mod1)[-n])
n <- length(residuals(mod1))
c <- cor(residuals(mod1)[-1], residuals(mod1)[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- c^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
res <- data$overall.score - x %*% beta
res
mean(res)
cor(res)
beta
g <- gls(overall.score ~ teaching.scoree, data=data)
g
g <- gls(overall.score ~ teaching.scoree, data=data)
g <- gls(overall.score ~ teaching.score, data=data)
g
summary(mod1, cor=TRUE)
g <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~ranking), data=data)
g
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
plot(data$teaching.score, data$overall.score)
abline(g$fitted, data$teaching.score)
abline(x %*% beta, data$teaching.score)
abline(y_hat, data$teaching.score)
y_hay <- x %*% beta
abline(y_hat, data$teaching.score)
y_hat <- x %*% beta
abline(y_hat, data$teaching.score)
abline(g)
car::avPlots(beta)
beta
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
cor(residuals(mod1)[-1], residuals(mod1)[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- 0.5301196^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~overall.score) data=data)
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~overall.score), data=data)
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~overall.score), data=data)
data <- read.csv("universities_cor.csv")
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(form= ~overall.score), data=data)
mod2
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(1), data=data)
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(0.5301196), data=data)
mod2
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- 0.5301196^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
data <- read.csv("universities_cor.csv")
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
cor(residuals(mod1)[-1], residuals(mod1)[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- 0.5301196^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
library(nlme)
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(0.5301196), data=data)
mod2
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=Sigma, data=data)
mod2 <- gls(overall.score ~ teaching.score+research.score, correlation=corAR1(Sigma), data=data)
data <- read.csv("universities_cor.csv")
mod1 <- lm(overall.score ~ teaching.score+research.score, data=data)
summary(mod1, cor=TRUE)
n <- length(residuals(mod1))
cor(residuals(mod1)[-1], residuals(mod1)[-n])
View(data)
View(data)
cor(residuals(mod1)[-1], residuals(mod1)[-n])
x <- model.matrix(mod1)
Sigma <- diag(n)
Sigma <- 0.5301196^abs(row(Sigma)-col(Sigma))
Sigi <- solve(Sigma)
Sigi
xtxi <- solve(t(x) %*% Sigi %*% x)
beta <- xtxi %*% t(x) %*% Sigi %*% data$overall.score
beta
summary(mod1, cor=TRUE)
xtxi
OmegaX <- Sigi%*%x
OmegaX
OmegaY
OmegaY
OmegaY <- Sigi%*%data$overall.score
OmegaY
OmegaX[0]
df <- data.frame(OmegaX)
df
mod2 <- lm(OmrgaY ~ df$X.Intercept.+df$teaching.score+df$research.score)
mod2
mod2 <- lm(OmegaY ~ df$X.Intercept.+df$teaching.score+df$research.score)
mod2
mod2 <- lm(OmegaY ~ df$teaching.score+df$research.score)
mod2
beta
df <- data.frame(OmegaX, OmegaY)
df
mod2 <- lm(OmegaY ~ teaching.score+research.score, data=df)
mod2
beta
summary(mod2)
summary(mod1, cor=TRUE)
summary(mod2)
summary(mod1, cor=TRUE)
summary(mod2)
beta
df
mod2 <- lm(OmegaY ~ X.Intercept.+teaching.score+research.score, data=df)
summary(mod2)
beta
df
summary(mod2)
63*3.07
63*0.307
beta
#--------------------(A)--------------------
round(cor(DF), 2)
DF <- read.csv("universities_cor.csv")
Y <- DF$overall.score
X <- DF$teaching.score
#--------------------(A)--------------------
round(cor(DF), 2)
DF <- subset(DF, select = -ranking)
DF <- subset(DF, select = -title)
DF <- subset(DF, select = -location)
DF <- subset(DF, select = -X)
DF <- subset(DF, select = - gender.ratio)
#--------------------(A)--------------------
round(cor(DF), 2)
#--------------------(B)--------------------
corrplot::corrplot(cor(wine), addCoef.col = "grey")
#--------------------(B)--------------------
corrplot::corrplot(cor(wine), addCoef.col = "grey")
#--------------------(B)--------------------
corrplot::corrplot(cor(DF), addCoef.col = "grey")
install.packages("corrplot")
#--------------------(B)--------------------
corrplot::corrplot(cor(DF), addCoef.col = "grey")
data <- data.frame(x1 = X, x2 = X2, x3 = X3, x4 = X4, x5 = x5, y = y)
#--------------------(A)--------------------
round(cor(data), 2)
#--------------------(A)--------------------
round(cor(data), 2)
data <- data.frame(x1 = X, x2 = X2, x3 = X3, x4 = X4, x5 = x5, y = y)
data <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, x5 = x5, y = y)
DF <- read.csv("universities_cor.csv")
y <- DF$overall.score
x1 <- DF$teaching.score
x2 <- DF$citations.score
x3 <- DF$industry.income.score
x4 <- DF$intl.outlook.score
x5 <- DF$number.students
data <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, x5 = x5, y = y)
#--------------------(A)--------------------
round(cor(data), 2)
#--------------------(B)--------------------
corrplot::corrplot(cor(DF), addCoef.col = "grey")
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
#--------------------(C)--------------------
modMulti <- lm(y ~ x1 + x2 + x3 + x4 + x5, data=dataFrame)
#--------------------(C)--------------------
modMulti <- lm(y ~ x1 + x2 + x3 + x4 + x5, data=data)
car::vif(modMulti)
#x2 has the highest value
# In next model we remove it
modClean <- lm(y ~ x1 + x3 + x4 + x5, data=data)
car::cif(modClen)
car::vif(modClen)
car::vif(modClean)
#--------------------(D)--------------------
car::compareCoefs(modMulti, modClean)
confint(modMulti)
confint(modClean)
summary(modMulti)
summary(modClean)
DF <- read.csv("universities_cor.csv")
y <- DF$overall.score
x1 <- DF$teaching.score
x2 <- DF$citations.score
x3 <- DF$industry.income.score
x4 <- DF$intl.outlook.score
data <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y = y)
#--------------------(A)--------------------
round(cor(data), 2)
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
#--------------------(C)--------------------
modMulti <- lm(y ~ x1 + x2 + x3 + x4, data=data)
car::vif(modMulti)
modClean <- lm(y ~ x1 + x3 + x4, data=data)
car::vif(modClean)
#--------------------(D)--------------------
car::compareCoefs(modMulti, modClean)
confint(modMulti)
confint(modClean)
summary(modMulti)
summary(modClean)
#--------------------(A)--------------------
mod <- lm(y ~ x1, data=data)
plot(data$y, data$x1)
#--------------------(B)--------------------
car::ncvTest(mod)
#--------------------(C)--------------------
plot(mod, 3) # -> heteroscedasticity
#--------------------(D)--------------------
mod1 <- lm(I(log(y)) ~ x1, data=data)
car::ncvTest(mod1)
mod2 <- lm(I(sqrt(y)) ~ x1, data=data)
car::ncvTest(mod2)
#--------------------(E)--------------------
delta <- 1
m <- -min(data$y) + delta
plot(lm(I(log(data$y + m)) ~ data$X1), 3)
plot(lm(I(log(data$y + m)) ~ data$x1), 3)
mod3 <- lm(I(log(data$Y + m)) ~ data$x1)
car::ncvTest(mod3)
mod3 <- lm(I(log(data$y + m)) ~ data$x1)
car::ncvTest(mod3)
#--------------------(A)--------------------
mod <- lm(y ~ x2, data=data)
plot(data$y, data$x1)
#--------------------(B)--------------------
car::ncvTest(mod)
#--------------------(C)--------------------
plot(mod, 3) # -> homoscedasticity
#--------------------(D)--------------------
mod1 <- lm(I(log(y)) ~ x2, data=data)
car::ncvTest(mod1)
mod2 <- lm(I(sqrt(y)) ~ x1, data=data)
car::ncvTest(mod2)
#--------------------(A)--------------------
mod <- lm(y ~ x2, data=data)
plot(data$y, data$x1)
#--------------------(B)--------------------
car::ncvTest(mod)
#--------------------(C)--------------------
plot(mod, 3) # -> heteroscedasticity
#--------------------(D)--------------------
mod1 <- lm(I(log(y)) ~ x2, data=data)
car::ncvTest(mod1)
mod2 <- lm(I(sqrt(y)) ~ x1, data=data)
car::ncvTest(mod2)
#--------------------(E)--------------------
delta <- 1
m <- -min(data$y) + delta
plot(lm(I(log(data$y + m)) ~ data$x2), 3)
mod3 <- lm(I(log(data$y + m)) ~ data$x2)
car::ncvTest(mod3)
#--------------------(F)--------------------
YJ <- car::powerTransform(lm(data$y ~ data$x2), family = "yjPower")
(lambdaYJ <- YJ$lambda)
YTransf <- car::yjPower(U = data$y, lambda = lambdaYJ)
plot(lm(YTransf ~ data$x2), 3)
mod4 <- lm(I(YTransf ~ data$x2))
car::ncvTest(mod4)
#--------------------(A)--------------------
#--------------------(B)--------------------
pca_df <- princomp(data, fix_sign = TRUE)
summary(pca_df)
#--------------------(A)--------------------
#--------------------(B)--------------------
pca_data <- princomp(data, fix_sign = TRUE)
summary(pca_data)
#--------------------(C)--------------------
plot(pca_data, type = "l")
#--------------------(D)--------------------
barplot(cumsum(pca_data$sdev^2) / sum(pca_data$sdev^2))
#--------------------(E)--------------------
head(sweep(pca_df$scores %*% t(pca_df$loadings), 2, pca_df$center, "+"))
#--------------------(F)--------------------
pca_df_std <- princomp(x = DF, cor = TRUE, fix_sign = TRUE)
summary(pca_df_std)
#--------------------(F)--------------------
pca_data_std <- princomp(x = data, cor = TRUE, fix_sign = TRUE)
summary(pca_data_std)
#--------------------(G)--------------------
biplot(pca_data, cex = 0.75)
biplot(pca_data_std, cex = 0.75)
#--------------------(G)--------------------
biplot(pca_data, cex = 0.75)
biplot(pca_data_std, cex = 0.75)
summary(modpca)
#--------------------(H)--------------------
data_x <- subset(data, -c(y))
pca_data_x <- princomp(x = data_X, cor = TRUE, fix_sign = TRUE)
#--------------------(H)--------------------
data_x <- subset(data, select = -c(y))
pca_data_x <- princomp(x = data_X, cor = TRUE, fix_sign = TRUE)
pca_data_x <- princomp(x = data_x, cor = TRUE, fix_sign = TRUE)
datapca <- data.frame(y=data$y, pca_data_x$scores)
modpca <- lm(y~Comp1+Comp2+Comp3+Comp4, data=datapca)
datapca
modpca <- lm(y~Comp.1+Comp.2+Comp.3+Comp.4, data=datapca)
summary(modpca)
modpca <- lm(y~Comp.1+Comp.2, data=datapca)
summary(modpca)
DF <- read.csv("universities_cor.csv")
y <- DF$overall.score
x1 <- DF$teaching.score
x2 <- DF$citations.score
x3 <- DF$industry.income.score
x4 <- DF$intl.outlook.score
data <- data.frame(x1 = x1, x2 = x2, x3 = x3, x4 = x4, y = y)
#--------------------(A)--------------------
round(cor(data), 2)
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
data <- subset(DF, -c(x, ranking, title, location))
data <- subset(DF, -c(X, ranking, title, location))
data <- subset(DF, select = -c(X, ranking, title, location))
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
DF$gender.ratio <- to_categorical(DF$gender.ratio)
DF$gender.ratio <- to_categorical(DF$gender.ratio)
DF$gender.ratio <- as.factor(DF$gender.ratio)
data <- subset(DF, select = -c(X, ranking, title, location))
#--------------------(A)--------------------
round(cor(data), 2)
data <- subset(DF, select = -c(X, ranking, title, location, gender.ratio))
#--------------------(A)--------------------
round(cor(data), 2)
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
plot(DF$number.students, DF$students.staff.ratio)
max(DF$number.students)
which.max(DF$number.students)
DF[1021]
DF[1021, ]
plot(DF$number.students, DF$overall.score)
plot(DF$perc.intl.students, DF$overall.score)
lm(overall.score ~ perc.intl.students, data = DF)
plot(DF$perc.intl.students, DF$overall.score)
mod <- lm(overall.score ~ perc.intl.students, data = DF)
plot(DF$perc.intl.students, DF$overall.score)
abline(mod)
#--------------------(B)--------------------
corrplot::corrplot(cor(data), addCoef.col = "grey")
